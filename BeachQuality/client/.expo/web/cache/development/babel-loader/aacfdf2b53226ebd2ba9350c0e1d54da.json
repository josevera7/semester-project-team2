{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\User\\\\Downloads\\\\semester-project-team2\\\\BeachQuality\\\\client\\\\pages\\\\Signup\\\\index.js\";\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SIGNUP_BACKGROUND } from \"../../constants\";\nimport { Container, Content, Item, Input, Form, Button, H1 } from \"native-base\";\nimport { COLORS } from \"../../constants\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { userSelectors } from \"../../store/selectors\";\nimport { userActions } from \"../../store/actions\";\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cPassword = _useState6[0],\n      setCPassword = _useState6[1];\n\n  var account = useSelector(userSelectors.selectUserAccount);\n  var handleSubmit = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(email, password, cPassword);\n\n            if (!(email && password && cPassword)) {\n              _context.next = 10;\n              break;\n            }\n\n            if (!(password === cPassword)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(userActions.registerUser({\n              email: email,\n              password: password\n            })));\n\n          case 5:\n            _context.next = 8;\n            break;\n\n          case 7:\n            console.log(\"Passwords don't match!\");\n\n          case 8:\n            _context.next = 11;\n            break;\n\n          case 10:\n            console.log(\"Can't have empty fields!\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [dispatch, email, password, cPassword]);\n  useEffect(function () {\n    if (account) navigation.navigate(\"Home\");\n  }, [dispatch, account]);\n\n  if (!account) {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, React.createElement(ImageBackground, {\n      source: SIGNUP_BACKGROUND,\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Signup\"), React.createElement(Form, {\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, React.createElement(Item, {\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, React.createElement(Input, {\n      name: \"email\",\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        setEmail(text);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(Input, {\n      secureTextEntry: true,\n      name: \"password\",\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), React.createElement(Item, {\n      style: styles.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(Input, {\n      secureTextEntry: true,\n      name: \"cPassword\",\n      placeholder: \"Confirm password\",\n      onChangeText: function onChangeText(text) {\n        setCPassword(text);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })), React.createElement(Text, {\n      style: [styles.text, styles.margin],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.link,\n      onPress: function onPress() {\n        return navigation.navigate(\"Terms\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Terms and service\")), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Already have an account?\", \" \", React.createElement(Text, {\n      style: styles.link,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Signin\")), React.createElement(Button, {\n      style: styles.button,\n      rounded: true,\n      success: true,\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Go\")))));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"cover\"\n  },\n  title: {\n    marginTop: \"20%\",\n    color: COLORS.WHITE,\n    fontSize: 40,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 20\n  },\n  link: {\n    color: \"orange\"\n  },\n  input: {\n    marginTop: 10,\n    backgroundColor: COLORS.WHITE,\n    minWidth: 300,\n    maxWidth: 500,\n    borderRadius: 50\n  },\n  form: {\n    alignItems: \"center\"\n  },\n  button: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    width: 100\n  },\n  buttonText: {\n    color: COLORS.WHITE,\n    fontWeight: \"bold\"\n  },\n  margin: {\n    marginTop: 10\n  },\n  text: {\n    color: COLORS.WHITE,\n    fontWeight: \"bold\"\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["F:/User/Downloads/semester-project-team2/BeachQuality/client/pages/Signup/index.js"],"names":["React","useEffect","useCallback","useState","SIGNUP_BACKGROUND","Container","Content","Item","Input","Form","Button","H1","COLORS","useDispatch","useSelector","userSelectors","userActions","Signup","navigation","dispatch","email","setEmail","password","setPassword","cPassword","setCPassword","account","selectUserAccount","handleSubmit","console","log","registerUser","navigate","styles","container","image","title","form","input","text","margin","link","goBack","button","buttonText","flex","alignItems","justifyContent","StyleSheet","create","flexDirection","width","height","resizeMode","marginTop","color","WHITE","fontSize","fontWeight","textAlign","marginBottom","backgroundColor","minWidth","maxWidth","borderRadius","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { View, Text, ImageBackground, StyleSheet } from \"react-native\";\r\nimport { SIGNUP_BACKGROUND } from \"../../constants\";\r\nimport { Container, Content, Item, Input, Form, Button, H1 } from \"native-base\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { userSelectors } from \"../../store/selectors\";\r\nimport { userActions } from \"../../store/actions\";\r\nconst Signup = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cPassword, setCPassword] = useState(\"\");\r\n  const account = useSelector(userSelectors.selectUserAccount);\r\n\r\n  const handleSubmit = useCallback(async () => {\r\n    console.log(email, password, cPassword);\r\n    if (email && password && cPassword) {\r\n      if (password === cPassword)\r\n        await dispatch(userActions.registerUser({ email, password }));\r\n      else console.log(\"Passwords don't match!\");\r\n    } else {\r\n      console.log(\"Can't have empty fields!\");\r\n    }\r\n  }, [dispatch, email, password, cPassword]);\r\n\r\n  useEffect(() => {\r\n    // console.log(account);\r\n    if (account) navigation.navigate(\"Home\");\r\n  }, [dispatch, account]);\r\n\r\n  if (!account) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground source={SIGNUP_BACKGROUND} style={styles.image}>\r\n          <Text style={styles.title}>Signup</Text>\r\n          <Form style={styles.form}>\r\n            <Item style={styles.input}>\r\n              <Input\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChangeText={text => {\r\n                  setEmail(text);\r\n                }}\r\n              />\r\n            </Item>\r\n            <Item style={styles.input}>\r\n              <Input\r\n                secureTextEntry={true}\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                onChangeText={text => {\r\n                  setPassword(text);\r\n                }}\r\n              />\r\n            </Item>\r\n            <Item style={styles.input}>\r\n              <Input\r\n                secureTextEntry={true}\r\n                name=\"cPassword\"\r\n                placeholder=\"Confirm password\"\r\n                onChangeText={text => {\r\n                  setCPassword(text);\r\n                }}\r\n              />\r\n            </Item>\r\n            <Text style={[styles.text, styles.margin]}>\r\n              <Text\r\n                style={styles.link}\r\n                onPress={() => navigation.navigate(\"Terms\")}\r\n              >\r\n                Terms and service\r\n              </Text>\r\n            </Text>\r\n            <Text style={styles.text}>\r\n              Already have an account?{\" \"}\r\n              <Text style={styles.link} onPress={() => navigation.goBack()}>\r\n                Signin\r\n              </Text>\r\n            </Text>\r\n\r\n            <Button\r\n              style={styles.button}\r\n              rounded\r\n              success\r\n              onPress={handleSubmit}\r\n            >\r\n              <Text style={styles.buttonText}>Go</Text>\r\n            </Button>\r\n          </Form>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\"\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n\r\n    resizeMode: \"cover\"\r\n  },\r\n  title: {\r\n    marginTop: \"20%\",\r\n    color: COLORS.WHITE,\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20\r\n  },\r\n  link: {\r\n    color: \"orange\"\r\n  },\r\n\r\n  input: {\r\n    marginTop: 10,\r\n    backgroundColor: COLORS.WHITE,\r\n    minWidth: 300,\r\n    maxWidth: 500,\r\n    borderRadius: 50\r\n  },\r\n  form: {\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n    width: 100\r\n  },\r\n  buttonText: {\r\n    color: COLORS.WHITE,\r\n    fontWeight: \"bold\"\r\n  },\r\n  margin: {\r\n    marginTop: 10\r\n  },\r\n  text: {\r\n    color: COLORS.WHITE,\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}