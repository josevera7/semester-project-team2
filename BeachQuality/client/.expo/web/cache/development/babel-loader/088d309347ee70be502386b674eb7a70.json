{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\User\\\\Downloads\\\\semester-project-team2\\\\BeachQuality\\\\client\\\\pages\\\\Signin\\\\index.js\";\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SIGNUP_BACKGROUND } from \"../../constants\";\nimport { Container, Content, Item, Input, Form, Button, H1 } from \"native-base\";\nimport { COLORS } from \"../../constants\";\nimport { useDispatch } from \"react-redux\";\nimport { userSelectors } from \"react-redux\";\nimport { userSelctors } from \"../../store/selectors\";\nimport { userActions } from \"../../store/actions\";\n\nvar Signin = function Signin(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cPassword = _useState6[0],\n      setCPassword = _useState6[1];\n\n  var handleSubmit = useCallback(function () {\n    console.log(email, password, cPassword);\n\n    if (email && password) {\n      dispatch(userActions.registerUser({\n        email: email,\n        password: password\n      }));\n    } else {\n      console.log(\"Can't have empty fields!\");\n    }\n  }, [dispatch, email, password, cPassword]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: SIGNUP_BACKGROUND,\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Signin\"), React.createElement(Form, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    name: \"email\",\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    secureTextEntry: true,\n    name: \"password\",\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: [styles.text, styles.margin],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\", \" \", React.createElement(Text, {\n    style: styles.link,\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Signup\")), React.createElement(Button, {\n    style: styles.button,\n    rounded: true,\n    success: true,\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Go\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"cover\"\n  },\n  title: {\n    marginTop: \"15%\",\n    color: COLORS.WHITE,\n    fontSize: 40,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: \"5%\"\n  },\n  link: {\n    color: \"orange\"\n  },\n  input: {\n    marginTop: \"3%\",\n    backgroundColor: COLORS.WHITE,\n    minWidth: 300,\n    maxWidth: 500,\n    borderRadius: 50\n  },\n  form: {\n    alignItems: \"center\"\n  },\n  button: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"3%\",\n    width: 100\n  },\n  buttonText: {\n    color: COLORS.WHITE,\n    fontWeight: \"bold\"\n  },\n  margin: {\n    marginTop: 10\n  },\n  text: {\n    color: COLORS.WHITE,\n    fontWeight: \"bold\"\n  }\n});\nexport default Signin;","map":{"version":3,"sources":["F:/User/Downloads/semester-project-team2/BeachQuality/client/pages/Signin/index.js"],"names":["React","useEffect","useCallback","useState","SIGNUP_BACKGROUND","Container","Content","Item","Input","Form","Button","H1","COLORS","useDispatch","userSelectors","userSelctors","userActions","Signin","navigation","dispatch","email","setEmail","password","setPassword","cPassword","setCPassword","handleSubmit","console","log","registerUser","styles","container","image","title","form","input","text","margin","link","navigate","button","buttonText","StyleSheet","create","flex","flexDirection","width","height","resizeMode","marginTop","color","WHITE","fontSize","fontWeight","textAlign","marginBottom","backgroundColor","minWidth","maxWidth","borderRadius","alignItems","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { View, Text, ImageBackground, StyleSheet } from \"react-native\";\r\nimport { SIGNUP_BACKGROUND } from \"../../constants\";\r\nimport { Container, Content, Item, Input, Form, Button, H1 } from \"native-base\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userSelectors } from \"react-redux\";\r\nimport { userSelctors } from \"../../store/selectors\";\r\nimport { userActions } from \"../../store/actions\";\r\nconst Signin = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cPassword, setCPassword] = useState(\"\");\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    console.log(email, password, cPassword);\r\n    if (email && password) {\r\n      dispatch(userActions.registerUser({ email, password }));\r\n    } else {\r\n      console.log(\"Can't have empty fields!\");\r\n    }\r\n  }, [dispatch, email, password, cPassword]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={SIGNUP_BACKGROUND} style={styles.image}>\r\n        <Text style={styles.title}>Signin</Text>\r\n        <Form style={styles.form}>\r\n          <Item style={styles.input}>\r\n            <Input\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChangeText={text => {\r\n                setEmail(text);\r\n              }}\r\n            />\r\n          </Item>\r\n          <Item style={styles.input}>\r\n            <Input\r\n              secureTextEntry={true}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChangeText={text => {\r\n                setPassword(text);\r\n              }}\r\n            />\r\n          </Item>\r\n\r\n          <Text style={[styles.text, styles.margin]}></Text>\r\n          <Text style={styles.text}>\r\n            Don't have an account?{\" \"}\r\n            <Text\r\n              style={styles.link}\r\n              onPress={() => navigation.navigate(\"Signup\")}\r\n            >\r\n              Signup\r\n            </Text>\r\n          </Text>\r\n\r\n          <Button style={styles.button} rounded success onPress={handleSubmit}>\r\n            <Text style={styles.buttonText}>Go</Text>\r\n          </Button>\r\n        </Form>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\"\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n\r\n    resizeMode: \"cover\"\r\n  },\r\n  title: {\r\n    marginTop: \"15%\",\r\n    color: COLORS.WHITE,\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"5%\"\r\n  },\r\n  link: {\r\n    color: \"orange\"\r\n  },\r\n\r\n  input: {\r\n    marginTop: \"3%\",\r\n    backgroundColor: COLORS.WHITE,\r\n    minWidth: 300,\r\n    maxWidth: 500,\r\n    borderRadius: 50\r\n  },\r\n  form: {\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  button: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"3%\",\r\n    width: 100\r\n  },\r\n  buttonText: {\r\n    color: COLORS.WHITE,\r\n    fontWeight: \"bold\"\r\n  },\r\n  margin: {\r\n    marginTop: 10\r\n  },\r\n  text: {\r\n    color: COLORS.WHITE,\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}